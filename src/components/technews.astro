---
import axios from "axios";
import NodeCache from "node-cache";
import type { Article } from "../Types.ts";

const { class: className, articles: articlesCount = 3, ...rest } = Astro.props;

const cache = new NodeCache({ stdTTL: 43200 }); // 12 hours
const apikey = import.meta.env.NEWSAPI_KEY;

let articles: Article[] | null = null;

const fetch_articles = async (): Promise<Article[] | null> => {
  const key = "tech-news";

  let cached_articles: Article[] | undefined = cache.get(key);
  if (cached_articles) {
    return cached_articles;
  }

  try {
    const response = await axios.get(
      `https://newsapi.org/v2/top-headlines?country=us&category=technology&apiKey=${apikey}`,
    );

    let articles = response.data.articles;
    cache.set(key, articles);

    return articles;
  } catch (error) {
    return null;
  }
};

articles = await fetch_articles();

const articlesToDisplay = articles?.slice(0, articlesCount) ?? [];
---

<section class={className} {...rest}>
  <ul>
    {
      articlesToDisplay.length > 0 ? (
        articlesToDisplay.map((article: Article) => (
          <li>
            <a href={article.url} target="_blank">
              {article.title}
            </a>
          </li>
        ))
      ) : (
        <li>ERROR FETCHING TECH NEWS!</li>
      )
    }
  </ul>
</section>
